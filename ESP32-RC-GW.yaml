esphome:
  name: esp32rcgw
  platform: ESP32
  board: nodemcu-32s

wifi:
  ssid: "wifihome"
  password: "storagegilson"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32Rcgw Fallback Hotspot"
    password: "oMwHOw9tZ7G6"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

sensor:
# Wifi signal monitor
  - platform: wifi_signal
    name: "ESP32-RC-GW WiFi Signal"
    update_interval: 60s

# Receiver configuration
remote_receiver:
  pin:
    number: GPIO32
#    mode: INPUT_PULLUP
#    inverted: true
  dump: rc_switch
  # Settings to optimize recognition of RF devices
  tolerance: 50%
  filter: 250us
  idle: 4ms
  buffer_size: 2kb

# Transmitter configuration
remote_transmitter:
  pin: GPIO33
  carrier_duty_percent: 100%


########################### EXAMPLE SMART PLUG CONFIG ###########################################


switch:
# Receiver Led switch
  - platform: gpio
    pin: GPIO27
    id: 'rc_input_led'
    internal: true
# Block transmission switch
  - platform: template
    name: "Block transmission switch"
    id: 'block_sw'
    internal: true
    optimistic: true
# Smart plug switch    
  - platform: template
    name: "Avidsen Smart Plug 1"
    id: "plug_1"
    icon: "mdi:power-socket-eu"
    optimistic: true
    # Turn ON code
    turn_on_action:
      then: 
        - delay: 500ms
        - if: 
            condition: 
              switch.is_off: block_sw
            then:        
              - logger.log: "Evaluated Block switch as OFF, transmitting RF code"
              - remote_transmitter.transmit_rc_switch_type_a:
                  group: '01010'
                  device: '10000'
                  state: on
                  protocol: 1
                  repeat: 
                    times: 10
                    wait_time: 0ms
        - if: 
            condition: 
              switch.is_on: block_sw
            then:        
              - logger.log: "Evaluated Block switch as ON, flipping it"
              - switch.turn_off: block_sw
    # Turn OFF code
    turn_off_action:
      then: 
        - delay: 500ms
        - if: 
            condition: 
              switch.is_off: block_sw
            then:        
              - logger.log: "Evaluated Block switch as OFF, transmitting RF code"
              - remote_transmitter.transmit_rc_switch_type_a:
                  group: '01010'
                  device: '10000'
                  state: off
                  protocol: 1
                  repeat: 
                    times: 10
                    wait_time: 0ms
        - if: 
            condition: 
              switch.is_on: block_sw
            then:      
              - logger.log: "Evaluated Block switch as ON, flipping it"
              - switch.turn_off: block_sw  

# Example smart plug 1 code detection
binary_sensor:
# Remote ON 
  - platform: remote_receiver
    name: "Receiver: Smart Plug 1 ON"
    internal: true
    rc_switch_type_a:
      group: '01010'
      device: '10000'
      state: on
      protocol: 1
    on_press:
      then:
        - switch.turn_on: block_sw 
        - switch.turn_on: rc_input_led
        - delay: 100ms
        - switch.turn_off: rc_input_led 
        - switch.turn_on: plug_1
       
# Remote OFF
  - platform: remote_receiver
    name: "Receiver: Smart Plug 1 OFF"
    internal: true
    rc_switch_type_a:
      group: '01010'
      device: '10000'
      state: off
      protocol: 1
    on_press:
      then:
        - switch.turn_on: block_sw 
        - switch.turn_on: rc_input_led
        - delay: 100ms
        - switch.turn_off: rc_input_led
        - switch.turn_off: plug_1